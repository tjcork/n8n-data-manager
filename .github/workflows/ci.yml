name: n8n push CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  shellcheck:
    name: ShellCheck Linting
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck

    - name: Run ShellCheck
      run: |
        chmod +x tests/test-shellcheck.sh
        ./tests/test-shellcheck.sh

    - name: Upload ShellCheck report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: shellcheck-report
        path: shellcheck-report.md

  syntax-validation:
    name: Bash Syntax Validation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Validate syntax
      run: |
        chmod +x tests/test-syntax.sh
        ./tests/test-syntax.sh

  backup-restore-test:
    name: Backup & Restore Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Run backup/restore tests
      run: |
        chmod +x tests/test-backup.sh
        ./tests/test-backup.sh

    - name: Cleanup test environment
      if: always()
      run: |
        docker stop n8n-push-test 2>/dev/null || true
        docker rm n8n-push-test 2>/dev/null || true

  restore-workflow-tests:
    name: Restore Workflow ID Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Test double-run restore
      run: |
        chmod +x tests/test-restore-double-run.sh
        ./tests/test-restore-double-run.sh

    - name: Test new workflow ID restore
      run: |
        chmod +x tests/test-restore-new-workflow-id.sh
        ./tests/test-restore-new-workflow-id.sh

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [shellcheck, syntax-validation, backup-restore-test, restore-workflow-tests]
    if: always()
    steps:
    - name: Generate test summary
      run: |
        echo "# Test Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "## Results Overview" >> test-summary.md
        echo "- ShellCheck: ${{ needs.shellcheck.result }}" >> test-summary.md
        echo "- Syntax Validation: ${{ needs.syntax-validation.result }}" >> test-summary.md
        echo "- Backup/Restore Test: ${{ needs.backup-restore-test.result }}" >> test-summary.md
        echo "- Restore Workflow Tests: ${{ needs.restore-workflow-tests.result }}" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Overall Status" >> test-summary.md
        
        if [[ "${{ needs.shellcheck.result }}" == "success" && \
              "${{ needs.syntax-validation.result }}" == "success" && \
              "${{ needs.backup-restore-test.result }}" == "success" && \
              "${{ needs.restore-workflow-tests.result }}" == "success" ]]; then
          echo "✅ ALL TESTS PASSED" >> test-summary.md
        else
          echo "❌ SOME TESTS FAILED" >> test-summary.md
        fi

    - name: Upload test summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md
